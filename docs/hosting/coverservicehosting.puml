@startuml

title Cover Service hosting

'>>> Skinparam
skinparam LegendBackgroundColor White

skinparam node {
	'backgroundColor CM Yellow
	borderColor<<drift>> Magenta
	borderColor<<hosting>> Blue
'	borderColor<<developer>> Red
	borderColor Red
	
}

skinparam package {
'"Front End" <<developer>>
	borderColor<<developer>> Red
}

skinparam database {
    borderColor Green
'    borderColor<<shared node>> Magenta
    borderColor<<drift>> Magenta
'    borderColor<<external>> Green
    borderColor<<hosting>> Blue
    borderThickness<<shared node>> 3
}
'<<< Skinparam


legend top right
|= |= Type |
|<back:#FF0000>   </back>| Developer |
|<back:Green>   </back>| External |
|<back:Magenta>   </back>| Drift |
|<back:Blue>   </back>| Hosting |
endlegend

'>>> Components
package "Front End" <<developer>> {
    component [Upload] as GUI
}

'database "FKCTOR" <<external>> {
database "FAKTOR" {
}

node "Server HW"  <<hosting>> as Server {
    node "Container" <<developer>> {
        node "Cover Service" as CS {
            [getCover]
            [putCover]
            [deleteCover]
            [updateCover]
        
            interface "getCover/" as GET
            interface "putCover/" as PUT
            interface "deleteCover/" as DELETE
            interface "updateCover/" as UPDATE
            interface "getStat/" as GETS
        }   /' Cover Service '/
    }   /' Container '/

    node "Container Manager" <<drift>> as CM {
    
    }

    database "CoverDB" <<drift>> {
        [Meta Data]
        [Log Data]
    }
    
    'node ".\t\tOS\t\t."  <<drift>> as OS {
    node "Operating System"  <<drift>> as OS {
    
    }

} /' Server '/

database "Cloudinary" {
    [Stored covers]
}

'<<< Components

'>>> Relations

Container --- CM
CM -down- OS

GUI -- GET
GUI -- PUT
GUI .. DELETE

GET -- [getCover]
PUT -- [putCover]
DELETE -- [deleteCover]
UPDATE -- [updateCover]
FAKTOR -- GETS
GETS -- [Log Data]

[getCover] .. [Meta Data]
[putCover] .. [Meta Data]
[deleteCover] .. [Meta Data]
[updateCover] .. [Meta Data]

[getCover] .. [Stored covers]
[putCover] .. [Stored covers]
[deleteCover] .. [Stored covers]
[updateCover] .. [Stored covers]

'<<< Relations
@enduml
